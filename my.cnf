# /etc/mysql/my.cnf

# ----------------------------------------------------------------------
# MySQL main configuration file. This configuration is targeted towards
# a MariaDB 5.5 server on a VPS server with only 2GB of RAM and limited
# computing power.
#
# Configuring a DBS like MySQL or MariaDB is hard work and needs a lot
# of tweaking all the time. Consider this configuration only as a start
# point for any other configuration and keep an eye on your DBS all the
# time. Especially if you have many write actions.
#
# You can check if any variables in this file are wrong with the
# following command:
#   mysqld --help --verbose > /dev/null
# ----------------------------------------------------------------------

# ----------------------------------------------------------------------
# CLIENT CONFIGURATION
# ----------------------------------------------------------------------

[client]

# As always, all charsets default to utf8.
default_character_set     = utf8
default-character-set     = utf8 # MariaDB recommended

# The listening socket.
socket                    = /var/run/mysqld/mysqld.sock

# ----------------------------------------------------------------------
# MYSQL SERVER STARTUP SCRIPT
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/mysqld-safe.html
# ----------------------------------------------------------------------

[mysqld_safe]

# Write the error log to the given file.
#
# DEFAULT: syslog
log-error                 = /var/log/mysql/error.log

# The process priority (nice). Enter a value between -19 and 20; where
# -19 means highest priority.
#
# SEE: man nice
# DEFAULT: 0
nice                      = 0

# Do not write error messages to syslog; use error log file
skip-syslog

# The Unix socket file that the server should use when listening for
# local connections
#
# DEFAULT: ?
socket                    = /var/run/mysqld/mysqld.sock

# ----------------------------------------------------------------------
# GLOBAL SERVER CONFIGURATION
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html
# ----------------------------------------------------------------------

[mysqld]

# The number of outstanding connection requests MySQL can have. This
# limit is also defined by the operating system. You should not set this
# to the maximum the system allows, otherwise you might now be able to
# log in if all handles are in use!
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_back_log
# DEFAULT: OS value
back_log                  = 32000

# The MySQL installation base directory. Relative path names for other
# variables usually are resolved to the base directory.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_basedir
# DEFAULT:
basedir                   = /usr

# ALL character set related options are set to UTF-8. We do not support
# any other character set unless explictely stated by the user who's
# working with our database.
character_set_server      = utf8
character-set-server      = utf8 # MariaDB recommended

# ALL collations are set to utf8_general_ci because it's the fastest!
collation_server          = utf8_general_ci
collation-server          = utf8_general_ci # MariaDB recommended

# The MySQL data directory.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_datadir
# DEFAULT:
datadir                   = /var/lib/mysql

# Enable the MariaDB User Feedback Plugin.
#
# SEE: http://kb.askmonty.org/en/user-feedback-plugin/
enable-feedback

# The number of days for automatic binary log file removal.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_expire_logs_days
# DEFAULT: 0
expire_logs_days          = 10

# The minimum size of the buffer that is used for plain index scans,
# range index scans, and joins that do not use indexes and thus perform
# full table scans. High values do not mean high performance. You should
# not set this to you very large amoutn globally. Instead stick to a
# small value and increase it only in sessions that are doing large
# joins. Drupal is performing a lot of joins, so we set this to a
# reasonable value.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_join_buffer_size
# DEFAULT: ?
join_buffer_size          = 4M

# Index blocks for MyISAM tables are buffered and shared by all threads.
# The key_buffer_size is the size of the buffer used for index blocks.
# The key buffer is also known as the key cache.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_key_buffer_size
# DEFAULT: 8388608
key_buffer_size           = 16M

# Whether large page support is enabled. You must ensure that your
# server has large page support and that it is configured properly. This
# can have a huge performance gain, so you might want to take care of
# this.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/large-page-support.html
# SEE: http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_large_pages
# DEFAULT: 0
large_pages               = true

# The locale to use for error messages.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/error-message-language.html
# DEFAULT: ?
lc_messages               = en_US

# The directory where error messages are located.
#
# SEE:  http://dev.mysql.com/doc/refman/5.5/en/error-message-language.html
# DEFAULT: ?
lc_messages_dir           = /usr/share/mysql

# The locale to use for day and month names.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/locale-support.html
# DEFAULT: en_US
lc_time_names             = en_US

# The maximum permitted number of simultaneous client connections.
# Increasing this value increases the number of file descriptors that
# mysqld requires.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/too-many-connections.html
# SEE: http://dev.mysql.com/doc/refman/5.5/en/table-cache.html
# SEE: http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_max_connections
# DEFAULT: 151
max_connections           = 400

# Sets the MyISAM storage engine recovery mode.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/server-options.html#option_mysqld_myisam-recover-options
# DEFAULT: OFF
myisam_recover_options    = BACKUP

# The absolute path to the process identifier (PID) file.
pid_file                  = /var/run/mysqld/mysqld.pid

# The amount of memory allocated for caching query results. The permiss-
# ible values are multiples of 1024; other values are rounded down to
# the nearest multiple. The query cache needs a minimum size of about
# 40KB to allocate its structures.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_query_cache_size
# DEFAULT: 0
query_cache_size          = 32M

# Sets the global query cache type. There are three possible enumeration
# values:
#   0 = Off
#   1 = Everything will be cached; except for SELECT SQL_NO_CACHE
#   2 = Only SELECT SQL_CACHE queries will be cached
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_query_cache_type
# DEFAULT: 1
query_cache_type          = 1

# Each thread that does a sequential scan for a MyISAM table allocates
# a buffer of this size (in bytes) for each table it scans. If you do
# many sequential scans, you might want to increase this value.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/memory-use.html
# SEE: http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_read_buffer_size
# DEFAULT: 131072
read_buffer_size          = 1M

# ----------------------------------------------------------------------
# When reading rows from a MyISAM table in sorted order following a key-
# sorting operation, the rows are read through this buffer to avoid disk
# seeks. Setting the variable to a large value can improve ORDER BY
# performance by a lot. However, this is a buffer allocated for each
# client, so you should not set the global variable to a large value.
# Instead, change the session variable only from within those clients
# that need to run large queries.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/order-by-optimization.html
# SEE: http://dev.mysql.com/doc/refman/5.5/en/memory-use.html
# SEE: http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_read_rnd_buffer_size
# DEFAULT: 262144
read_rnd_buffer_size      = 4M

# Only use IP numbers and all Host columns values in the grant tables
# must be IP addresses or localhost.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/host-cache.html
# DEFAULT: OFF
skip_name_resolve
skip-name-resolve

# Server permits only local (non TCP) connections via Unix sockets.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_skip_networking
# DEFAULT: OFF
skip_networking
skip-networking

# The absolute path to the Unix socket where MySQL is listening for
# incoming client requests.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_socket
# DEFAULT: /tmp/mysql.sock
socket                    = /var/run/mysqld/mysqld.sock

# Each session that needs to do a sort allocates a buffer of this size.
# This is not specific to any storage engine and applies in a general
# manner for optimization.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/order-by-optimization.html
# DEFAULT: 2097144
sort_buffer_size          = 4M

# How many threads the server should cache for reuse. When a client
# disconnects, the client's threads are put in the cache if there are
# fewer than thread_cache_size threads there. Requests for threads are
# satisfied by reusing threads taken from the cache if possible, and
# only when the cache is empty is a new thread created. This variable
# can be increased to improve performance if you have a lot of new
# connections. Normally, this does not provide a notable performance
# improvement if you have a good thread implementation. However, if
# your server sees hundreds of connections use cached threads. By
# examining the difference between the connections and threads created
# status variables, you can see how efficient the thread cache is.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/server-status-variables.html
# SEE: http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_thread_cache_size
# DEFAULT: 0
thread_cache_size         = 88

# The directory used for temporary files and temporary tables.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_tmpdir
# DEFAULT: ?
tmpdir                    = /tmp

# Run the mysqld server as the user having the name user_name or the
# numeric user ID user_id
#
# DEFAULT: root
user                      = mysql

# ----------------------------------------------------------------------
# INNODB / XTRADB CONFIGURATION
# ----------------------------------------------------------------------

# If enabled, InnoDB / XtraDB creates each new table using its own .idb
# file for storing data and indexes, rather than in the system table-
# space. Table compression only works for tables stored in separate
# tablespaces.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/innodb-multiple-tablespaces.html
# SEE: http://dev.mysql.com/doc/refman/5.5/en/innodb-parameters.html#sysvar_innodb_file_per_table
# DEFAULT: FALSE
innodb_file_per_table     = true

# This setting can have a positive or negative effect on performance and
# should always be tested on the current server the DBS is running on!
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/innodb-parameters.html#sysvar_innodb_flush_method
# DEFAULT: fdatasync
innodb_flush_method       = O_DIRECT

# The size of the memory buffer InnoDB / XtraDB uses to cache data and
# indexes of its tables. The larger this value, the less disk I/O is
# needed to access data in tables. A save value is 50% of the available
# operating system memory.
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size
# DEFAULT: 128M
innodb_buffer_pool_size   = 512M

# An upper limit on the I/O activity performed by the InnoDB background
# tasks, such as flushing pages from the buffer pool and merging data
# from the insert buffer.
#
# Refer to the manual of your drive to find out the IOPS.
#
# You can monitor the IOPS with e.g. iostat (package sysstat on Debian).
#
# SEE: http://blog.mariadb.org/how-to-tune-mariadb-write-performance/
# SEE: http://dev.mysql.com/doc/refman/5.5/en/innodb-performance-thread_io_rate.html
# SEE: http://dev.mysql.com/doc/refman/5.5/en/optimizing-innodb-diskio.html
# DEFAULT: 200
#
# Some commonly used SSD drives.
#innodb_io_capacity        = 400    # Simple SLC SSD
#innodb_io_capacity        = 5000   # Intel X25-E
#innodb_io_capacity        = 20000  # G-Skill Phoenix Pro
#innodb_io_capacity        = 60000  # OCZ Vertex 3
#innodb_io_capacity        = 120000 # OCZ Vertex 4
#innodb_io_capacity        = 200000 # OCZ RevoDrive 3 X2
#
# Only really fast SAS drives (15,000 rpm) are capable of reaching 200
# IOPS. You might consider lowering the value if you are using a slower
# drive.
#innodb_io_capacity        = 100 # 7,200 rpm
#innodb_io_capacity        = 150 # 10,000 rpm
#innodb_io_capacity        = 200 # 15,000 rpm default

# "InnoDB pages are organized in blocks of 64 pages. When the check-
# pointing algorithm has picked a dirty page to be written to disk, it
# checks if there are more dirty pages in the block and if yes, writes
# all those pages at once. The rationale is, that with rotating disks
# the most expensive part of a write operation is head movement. Once
# the head is over the right track, it does not make much difference if
# we write 10 or 100 sectors."
# ~~ Axel Schwenke
#
# SEE: http://blog.mariadb.org/how-to-tune-mariadb-write-performance/
# DEFAULT: area
innodb_flush_neighbor_pages = cont

# ----------------------------------------------------------------------
# MYSQLDUMP CONFIGURATION
#
# SEE: http://dev.mysql.com/doc/refman/5.5/en/mysqldump.html
# ----------------------------------------------------------------------

[mysqldump]

# This option is useful for dumping large tables. It forces mysqldump
# to retrieve rows for a table from the server a row at a time rather
# then retrieving the entire row set and buffering it in memory before
# writing it out.
quick

# The maximum size of the buffer for client/server communication.
max_allowed_packet        = 32M

# ----------------------------------------------------------------------
# Location from which mysqld might load additional configuration files.
# Note that these configuration files might override values set in this
# configuration file!
!includedir /etc/mysql/conf.d/